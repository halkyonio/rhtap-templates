apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: 'https://github.com/ch007m/tekton-pac?rev={{revision}}'
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    appstudio.openshift.io/request: "configure-pac"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-event: '[pull_request, push]'
    pipelinesascode.tekton.dev/on-target-branch: '[main]'
  labels:
    appstudio.openshift.io/application: #APPLICATION_NAME#  #TODO: changeme
    appstudio.openshift.io/component: #COMPONENT_NAME# #TODO: changeme
    pipelines.appstudio.openshift.io/type: build
  name: #PAC_NAME# #TODO: changeme
  namespace: #TENANT_NAMESPACE# #TODO: changeme
spec:
  params:
    - name: dockerfile
      value: https://raw.githubusercontent.com/devfile-samples/devfile-sample-code-with-quarkus/main/src/main/docker/Dockerfile.jvm.staged
    - name: git-url
      value: '{{repo_url}}'
    - name: image-expires-after
      value: 5d
    - name: output-image
      # Example: quay.io/redhat-user-workloads/cmoullia-tenant/rhtap-buildpack-demo-1/quarkus-hello-1:8e532f04f5cd873acc57cf5d0514111af93a8b91
      value: #REGISTRY_URL#:build-{{revision}} #TODO: changeme
    - name: path-context
      value: .
    - name: revision
      value: '{{revision}}'
  pipelineSpec:
    finally:
      - name: show-sbom
        when:
          - input: $(params.enable-sbom)
            operator: in
            values: ["true"]
        params:
          - name: IMAGE_URL
            value: $(tasks.build-container.results.IMAGE_URL)
        taskSpec:
          steps:
            - name: show-sbom
              image: quay.io/halkyonio/buildpack-tools
              imagePullPolicy: Always
              script: |
                #!/usr/bin/env bash
                set -e
                ls -la
                pack sbom download $(params.IMAGE_URL) --remote
              volumeMounts:
                - name: layers-dir
                  mountPath: /layers
        #TODO: To be reviewed to see if we can share the project containing the sbom files generated
        # workspaces:
        #  - name: workspace
        #    workspace: workspace

        #TODO: Task cannot be used as sbom is already generated by buildpack - see: https://paketo.io/docs/howto/sbom/#access-the-software-bill-of-materials-on-a-sample-application
        # - taskRef:
        #   bundle: # quay.io/redhat-appstudio-tekton-catalog/task-show-sbom:0.1@sha256:23cc5e2315040ce142a9aa764fa455b31bb42baeb0c0ec049a12a19d844b2c8a
        #   name: show-sbom
      - name: show-summary
        when:
          - input: $(params.enable-sbom)
            operator: in
            values: ["true"]
        params:
          - name: pipelinerun-name
            value: $(context.pipelineRun.name)
          - name: git-url
            value: $(tasks.clone-repository.results.url)?rev=$(tasks.clone-repository.results.commit)
          - name: image-url
            value: $(params.output-image)
          - name: build-task-status
            value: $(tasks.build-container.status)
        taskRef:
          bundle: quay.io/redhat-appstudio-tekton-catalog/task-summary:0.1@sha256:bd6a2285974541df01260deca99a84b3b48a6b40759049e7e41e96b4942d83d3
          name: summary
    params:
      - description: Source Repository URL
        name: git-url
        type: string
      - default: ""
        description: Revision of the Source Repository
        name: revision
        type: string
      - description: Fully Qualified Output Image
        name: output-image
        type: string
      - default: .
        description: The path to your source code
        name: path-context
        type: string
      - default: Dockerfile
        description: Path to the Dockerfile
        name: dockerfile
        type: string
      - default: "false"
        description: Force rebuild image
        name: rebuild
        type: string
      - description: A boolean indicating whether we would like to execute a step
        default: "false"
        name: enable-sbom
        type: string
      - default: "false"
        description: Skip checks against built image
        name: skip-checks
        type: string
      - default: "true"
        description: Skip optional checks, set false if you want to run optional checks
        name: skip-optional
        type: string
      - default: "false"
        description: Execute the build with network isolation
        name: hermetic
        type: string
      - default: ""
        description: Build dependencies to be prefetched by Cachi2
        name: prefetch-input
        type: string
      - default: "false"
        description: Java build
        name: java
        type: string
      - default: ""
        description: Snyk Token Secret Name
        name: snyk-secret
        type: string
      - default: ""
        description: Image tag expiration time, time values could be something like
          1h, 2d, 3w for hours, days, and weeks, respectively.
        name: image-expires-after
    results:
      - description: "The URL of the built `APPLICATION_IMAGE`"
        name: IMAGE_URL
        value: $(tasks.build-container.results.IMAGE_URL)
      - description: "The digest of the built `APPLICATION_IMAGE`"
        name: IMAGE_DIGEST
        value: $(tasks.build-container.results.IMAGE_DIGEST)
      - description: ""
        name: CHAINS-GIT_URL
        value: $(tasks.clone-repository.results.url)
      - description: ""
        name: CHAINS-GIT_COMMIT
        value: $(tasks.clone-repository.results.commit)
    tasks:
      - name: init
        params:
          - name: image-url
            value: $(params.output-image)
          - name: rebuild
            value: $(params.rebuild)
          - name: skip-checks
            value: $(params.skip-checks)
          - name: skip-optional
            value: $(params.skip-optional)
          - name: pipelinerun-name
            value: $(context.pipelineRun.name)
          - name: pipelinerun-uid
            value: $(context.pipelineRun.uid)
        taskRef:
          bundle: quay.io/redhat-appstudio-tekton-catalog/task-init:0.1@sha256:26586a7ef08c3e86dfdaf0a5cc38dd3d70c4c02db1331b469caaed0a0f5b3d86
          name: init
      - name: clone-repository
        params:
          - name: url
            value: $(params.git-url)
          - name: revision
            value: $(params.revision)
        runAfter:
          - init
        taskRef:
          bundle: quay.io/redhat-appstudio-tekton-catalog/task-git-clone:0.1@sha256:44260edd7da429a3bca3843be5049a15f05f658d1e9766521379e067e972c1e0
          name: git-clone
        when:
          - input: $(tasks.init.results.build)
            operator: in
            values:
              - "true"
        workspaces:
          - name: output
            workspace: workspace
          - name: basic-auth
            workspace: git-auth
      - name: prefetch-dependencies
        params:
          - name: input
            value: $(params.prefetch-input)
        runAfter:
          - clone-repository
        taskRef:
          bundle: quay.io/redhat-appstudio-tekton-catalog/task-prefetch-dependencies:0.1@sha256:7851457b29fc187c8027fd53ed4f54c6e3a2e9fb0fd85da058022c6fd4dce1b1
          name: prefetch-dependencies
        when:
          - input: $(params.hermetic)
            operator: in
            values:
              - "true"
        workspaces:
          - name: source
            workspace: workspace
      - name: build-container
        params:
          - name: IMAGE
            value: $(params.output-image)
          - name: DOCKERFILE
            value: $(params.dockerfile)
          - name: CONTEXT
            value: $(params.path-context)
          - name: HERMETIC
            value: $(params.hermetic)
          - name: PREFETCH_INPUT
            value: $(params.prefetch-input)
          - name: IMAGE_EXPIRES_AFTER
            value: $(params.image-expires-after)
          - name: COMMIT_SHA
            value: $(tasks.clone-repository.results.commit)
          # Buildpacks parameters
          - name: APP_IMAGE
            value: $(params.output-image)  #${IMAGE_NAME}
          - name: SOURCE_SUBPATH
            value: "" #getting-started
          - name: CNB_BUILDER_IMAGE
            value: paketobuildpacks/builder:0.1.361-tiny #${BUILDER_IMAGE}
          - name: CNB_LIFECYCLE_IMAGE
            value: buildpacksio/lifecycle:0.16.3 #${LIFECYCLE_IMAGE}
            #value: buildpacksio/lifecycle:0.17.0-rc.3 - CAN BE USED TO DEBUG REGISTRY ISSUES
          - name: RUN_IMAGE
            value: paketobuildpacks/run:tiny #${RUN_IMAGE}
          - name: ENV_VARS
            value:
              - BP_NATIVE_IMAGE=false
              - BP_MAVEN_BUILT_ARTIFACT=target/quarkus-app/lib/ target/quarkus-app/*.jar target/quarkus-app/app/ target/quarkus-app/quarkus/
              - BP_MAVEN_BUILD_ARGUMENTS=package -DskipTests=true -Dmaven.javadoc.skip=true -Dquarkus.package.type=fast-jar
        runAfter:
          - prefetch-dependencies
        taskRef:
          resolver: git
          params:
            - name: url
              value: https://github.com/redhat-buildpacks/testing.git
            - name: revision
              value: main
            - name: pathInRepo
              value: k8s/tekton/buildpacks-phases.yml
        when:
          - input: $(tasks.init.results.build)
            operator: in
            values:
              - "true"
        workspaces:
          - name: source
            workspace: workspace

      - name: inspect-image
        params:
          - name: IMAGE_URL
            value: $(tasks.build-container.results.IMAGE_URL)
          - name: IMAGE_DIGEST
            value: $(tasks.build-container.results.IMAGE_DIGEST)
        runAfter:
          - build-container
        taskRef:
          bundle: quay.io/redhat-appstudio-tekton-catalog/task-inspect-image:0.1@sha256:bbc286f0a2ad94e671ceb9d0f1debd96f36b8c38c1147c5030957820b4125fc6
          name: inspect-image
        when:
          - input: $(params.skip-checks)
            operator: in
            values:
              - "false"
        workspaces:
          - name: source
            workspace: workspace
      #  TODO: What is the purpose of such step
      #- name: label-check
      #  runAfter:
      #  - inspect-image
      #  taskRef:
      #    bundle: quay.io/redhat-appstudio-tekton-catalog/task-label-check:0.1@sha256:d5815b438362ba74eb44e7367bcab15b180c9f9351b801283511da356f3559f0
      #    name: label-check
      #  when:
      #  - input: $(params.skip-checks)
      #    operator: in
      #    values:
      #    - "false"
      #  workspaces:
      #  - name: workspace
      #    workspace: workspace
      #  TODO: What is the purpose of such step
      #- name: optional-label-check
      #  params:
      #  - name: POLICY_NAMESPACE
      #    value: optional_checks
      #  runAfter:
      #  - inspect-image
      #  taskRef:
      #    bundle: quay.io/redhat-appstudio-tekton-catalog/task-label-check:0.1@sha256:d5815b438362ba74eb44e7367bcab15b180c9f9351b801283511da356f3559f0
      #    name: label-check
      #  when:
      #  - input: $(params.skip-optional)
      #    operator: in
      #    values:
      #    - "false"
      #  workspaces:
      #  - name: workspace
      #    workspace: workspace
      #  TODO: What is the purpose of such step
      #- name: deprecated-base-image-check
      #  params:
      #  - name: BASE_IMAGES_DIGESTS
      #    value: $(tasks.build-container.results.BASE_IMAGES_DIGESTS)
      #  taskRef:
      #    bundle: quay.io/redhat-appstudio-tekton-catalog/task-deprecated-image-check:0.2@sha256:5ccacaaec39f94550b3f92595908d2fae972116138fb7ac8b072b5f26808b000
      #    name: deprecated-image-check
      #  when:
      #  - input: $(params.skip-checks)
      #    operator: in
      #    values:
      #    - "false"
      #  workspaces:
      #  - name: test-ws
      #    workspace: workspace
      - name: clair-scan
        params:
          - name: image-digest
            value: $(tasks.build-container.results.IMAGE_DIGEST)
          - name: image-url
            value: $(tasks.build-container.results.IMAGE_URL)
        runAfter:
          - build-container
        taskRef:
          bundle: quay.io/redhat-appstudio-tekton-catalog/task-clair-scan:0.1@sha256:c5602d9d6dd797da98e98fde8471ea55a788c30f74f2192807910ce5436e9b66
          name: clair-scan
        when:
          - input: $(params.skip-checks)
            operator: in
            values:
              - "false"
      - name: sast-snyk-check
        params:
          - name: SNYK_SECRET
            value: $(params.snyk-secret)
        runAfter:
          - clone-repository
        taskRef:
          bundle: quay.io/redhat-appstudio-tekton-catalog/task-sast-snyk-check:0.1@sha256:9dcd450b454705b9fe22c5f8f7bb7305cebc3cb73e783b85e047f7e721994189
          name: sast-snyk-check
        when:
          - input: $(params.skip-checks)
            operator: in
            values:
              - "true"
          - input: $(params.snyk-secret)
            operator: notin
            values:
              - ""
        workspaces:
          - name: workspace
            workspace: workspace
      - name: clamav-scan
        params:
          - name: image-digest
            value: $(tasks.build-container.results.IMAGE_DIGEST)
          - name: image-url
            value: $(tasks.build-container.results.IMAGE_URL)
        runAfter:
          - build-container
        taskRef:
          bundle: quay.io/redhat-appstudio-tekton-catalog/task-clamav-scan:0.1@sha256:d00c0bf26c63ee86631a289d46abb75acfe3db2743a06a8d656fdde1451702e9
          name: clamav-scan
        when:
          - input: $(params.skip-checks)
            operator: in
            values:
              - "true"
      - name: sbom-json-check
        params:
          - name: IMAGE_URL
            value: $(tasks.build-container.results.IMAGE_URL)
          - name: IMAGE_DIGEST
            value: $(tasks.build-container.results.IMAGE_DIGEST)
        runAfter:
          - build-container
        taskRef:
          bundle: quay.io/redhat-appstudio-tekton-catalog/task-sbom-json-check:0.1@sha256:0228d0cfc86a1b3f788afdffe36e5ca2b357be00d73a5c97a0519f870f8c485d
          name: sbom-json-check
        when:
          - input: $(params.skip-checks)
            operator: in
            values:
              - "false"
    workspaces:
      - name: workspace
      - name: git-auth
        optional: true
  workspaces:
    - name: workspace
      volumeClaimTemplate:
        metadata:
          creationTimestamp: null
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
        status: {}
    - name: git-auth
      secret:
        secretName: '{{ git_auth_secret }}'
status: {}
