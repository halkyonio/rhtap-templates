apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/ch007m/tekton-pac?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-event: '[push]'
    pipelinesascode.tekton.dev/on-target-branch: '[main]'
  labels:
    appstudio.openshift.io/application: buildpack-test
    appstudio.openshift.io/component: tekton-pac-4x7o
    pipelines.appstudio.openshift.io/type: build
  name: tekton-pac-4x7o-on-push
  namespace: cmoullia-tenant
spec:
  params:
  - name: dockerfile
    value: https://raw.githubusercontent.com/devfile-samples/devfile-sample-code-with-quarkus/main/src/main/docker/Dockerfile.jvm.staged
  - name: git-url
    value: '{{repo_url}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/cmoullia-tenant/buildpack-test/tekton-pac-4x7o:{{revision}}
  - name: path-context
    value: .
  - name: revision
    value: '{{revision}}'
  pipelineSpec:
    finally:
    - name: show-sbom
      taskSpec:
        image: quay.io/halkyonio/buildpack-tools
        imagePullPolicy: Always
        script: |
          #!/usr/bin/env bash
          set -e
          pack version
      # params:
      # - name: IMAGE_URL
      #   value: $(tasks.build-container.results.IMAGE_URL)
      # taskRef:
      #   bundle: # quay.io/redhat-appstudio-tekton-catalog/task-show-sbom:0.1@sha256:23cc5e2315040ce142a9aa764fa455b31bb42baeb0c0ec049a12a19d844b2c8a
      #   name: show-sbom
    - name: show-summary
      params:
      - name: pipelinerun-name
        value: $(context.pipelineRun.name)
      - name: git-url
        value: $(tasks.clone-repository.results.url)?rev=$(tasks.clone-repository.results.commit)
      - name: image-url
        value: $(params.output-image)
      - name: build-task-status
        value: $(tasks.build-container.status)
      taskRef:
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-summary:0.1@sha256:b1b68a5203e66e7f2d0b9fe7996364cac26aa43f95825f7d88f699acd0ab6ec4
        name: summary
    params:
    - description: Source Repository URL
      name: git-url
      type: string
    - default: ""
      description: Revision of the Source Repository
      name: revision
      type: string
    - description: Fully Qualified Output Image
      name: output-image
      type: string
    - default: .
      description: The path to your source code
      name: path-context
      type: string
    - default: Dockerfile
      description: Path to the Dockerfile
      name: dockerfile
      type: string
    - default: "false"
      description: Force rebuild image
      name: rebuild
      type: string
    - default: "true"
      description: Skip checks against built image
      name: skip-checks
      type: string
    - default: "true"
      description: Skip optional checks, set false if you want to run optional checks
      name: skip-optional
      type: string
    - default: "false"
      description: Execute the build with network isolation
      name: hermetic
      type: string
    - default: ""
      description: Build dependencies to be prefetched by Cachi2
      name: prefetch-input
      type: string
    - default: "false"
      description: Java build
      name: java
      type: string
    - default: ""
      description: Snyk Token Secret Name
      name: snyk-secret
      type: string
    - default: ""
      description: Image tag expiration time, time values could be something like
        1h, 2d, 3w for hours, days, and weeks, respectively.
      name: image-expires-after
    results:
    - description: "The URL of the built `APPLICATION_IMAGE`"
      name: IMAGE_URL
      value: $(tasks.build-container.results.IMAGE_URL)
    - description: "The digest of the built `APPLICATION_IMAGE`"
      name: IMAGE_DIGEST
      value: $(tasks.build-container.results.IMAGE_DIGEST)
    - description: ""
      name: CHAINS-GIT_URL
      value: $(tasks.clone-repository.results.url)
    - description: ""
      name: CHAINS-GIT_COMMIT
      value: $(tasks.clone-repository.results.commit)
    tasks:
    - name: init
      params:
      - name: image-url
        value: $(params.output-image)
      - name: rebuild
        value: $(params.rebuild)
      - name: skip-checks
        value: $(params.skip-checks)
      - name: skip-optional
        value: $(params.skip-optional)
      - name: pipelinerun-name
        value: $(context.pipelineRun.name)
      - name: pipelinerun-uid
        value: $(context.pipelineRun.uid)
      taskRef:
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-init:0.1@sha256:26586a7ef08c3e86dfdaf0a5cc38dd3d70c4c02db1331b469caaed0a0f5b3d86
        name: init
    - name: clone-repository
      params:
      - name: url
        value: $(params.git-url)
      - name: revision
        value: $(params.revision)
      runAfter:
      - init
      taskRef:
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-git-clone:0.1@sha256:458f4853a01c3273bd76076ac1b015d5f901e70fb4b776f788b577adb25bf5f8
        name: git-clone
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
      workspaces:
      - name: output
        workspace: workspace
      - name: basic-auth
        workspace: git-auth
    - name: prefetch-dependencies
      params:
      - name: input
        value: $(params.prefetch-input)
      runAfter:
      - clone-repository
      taskRef:
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-prefetch-dependencies:0.1@sha256:8232d76d919a5b88609abd48c32fae1a91f4c712a49804d0cb80fa6a4b360b48
        name: prefetch-dependencies
      when:
      - input: $(params.hermetic)
        operator: in
        values:
        - "true"
      workspaces:
      - name: source
        workspace: workspace
    - name: build-container
      params:
      - name: IMAGE
        value: $(params.output-image)
      - name: DOCKERFILE
        value: $(params.dockerfile)
      - name: CONTEXT
        value: $(params.path-context)
      - name: HERMETIC
        value: $(params.hermetic)
      - name: PREFETCH_INPUT
        value: $(params.prefetch-input)
      - name: IMAGE_EXPIRES_AFTER
        value: $(params.image-expires-after)
      - name: COMMIT_SHA
        value: $(tasks.clone-repository.results.commit)
      # Buildpacks parameters
      - name: APP_IMAGE
        value: $(params.output-image)  #${IMAGE_NAME}
      - name: SOURCE_SUBPATH
        value: "" #getting-started
      - name: CNB_BUILDER_IMAGE
        value: paketobuildpacks/builder:0.1.361-tiny #${BUILDER_IMAGE}
      - name: CNB_LIFECYCLE_IMAGE
        value: buildpacksio/lifecycle:0.16.3 #${LIFECYCLE_IMAGE}
      - name: RUN_IMAGE
        value: paketobuildpacks/run:tiny #${RUN_IMAGE}
      - name: ENV_VARS
        value:
          - BP_NATIVE_IMAGE=false
          - BP_MAVEN_BUILT_ARTIFACT=target/quarkus-app/lib/ target/quarkus-app/*.jar target/quarkus-app/app/ target/quarkus-app/quarkus/
          - BP_MAVEN_BUILD_ARGUMENTS=package -DskipTests=true -Dmaven.javadoc.skip=true -Dquarkus.package.type=fast-jar
      runAfter:
      - prefetch-dependencies
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/redhat-buildpacks/testing.git
          - name: revision
            value: main
          - name: pathInRepo
            value: k8s/tekton/buildpacks-phases.yml
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
      workspaces:
      - name: source
        workspace: workspace

    - name: inspect-image
      params:
      - name: IMAGE_URL
        value: $(tasks.build-container.results.IMAGE_URL)
      - name: IMAGE_DIGEST
        value: $(tasks.build-container.results.IMAGE_DIGEST)
      runAfter:
      - build-container
      taskRef:
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-inspect-image:0.1@sha256:604531fb0ec3ddb4ec51e9dbd7f0074cd226093e77ba59a3d9ea5a31293889da
        name: inspect-image
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
      workspaces:
      - name: source
        workspace: workspace
    #- name: label-check
    #  runAfter:
    #  - inspect-image
    #  taskRef:
    #    bundle: quay.io/redhat-appstudio-tekton-catalog/task-label-check:0.1@sha256:d5815b438362ba74eb44e7367bcab15b180c9f9351b801283511da356f3559f0
    #    name: label-check
    #  when:
    #  - input: $(params.skip-checks)
    #    operator: in
    #    values:
    #    - "false"
    #  workspaces:
    #  - name: workspace
    #    workspace: workspace
    #- name: optional-label-check
    #  params:
    #  - name: POLICY_NAMESPACE
    #    value: optional_checks
    #  runAfter:
    #  - inspect-image
    #  taskRef:
    #    bundle: quay.io/redhat-appstudio-tekton-catalog/task-label-check:0.1@sha256:d5815b438362ba74eb44e7367bcab15b180c9f9351b801283511da356f3559f0
    #    name: label-check
    #  when:
    #  - input: $(params.skip-optional)
    #    operator: in
    #    values:
    #    - "false"
    #  workspaces:
    #  - name: workspace
    #    workspace: workspace
    #- name: deprecated-base-image-check
    #  params:
    #  - name: BASE_IMAGES_DIGESTS
    #    value: $(tasks.build-container.results.BASE_IMAGES_DIGESTS)
    #  taskRef:
    #    bundle: quay.io/redhat-appstudio-tekton-catalog/task-deprecated-image-check:0.2@sha256:5ccacaaec39f94550b3f92595908d2fae972116138fb7ac8b072b5f26808b000
    #    name: deprecated-image-check
    #  when:
    #  - input: $(params.skip-checks)
    #    operator: in
    #    values:
    #    - "false"
    #  workspaces:
    #  - name: test-ws
    #    workspace: workspace
    - name: clair-scan
      params:
      - name: image-digest
        value: $(tasks.build-container.results.IMAGE_DIGEST)
      - name: image-url
        value: $(tasks.build-container.results.IMAGE_URL)
      runAfter:
      - build-container
      taskRef:
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-clair-scan:0.1@sha256:4180e299be38b8c0ff90e3721ddcff6066a849fb0b0cc86bbee8f22ca17a3b4f
        name: clair-scan
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "true"
    - name: sast-snyk-check
      params:
      - name: SNYK_SECRET
        value: $(params.snyk-secret)
      runAfter:
      - clone-repository
      taskRef:
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-sast-snyk-check:0.1@sha256:2847ad8183aa020dfda9398cc4b0bcb2a54895d30f1012dddb3c4b6e01d156ae
        name: sast-snyk-check
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
      - input: $(params.snyk-secret)
        operator: notin
        values:
        - ""
      workspaces:
      - name: workspace
        workspace: workspace
    - name: clamav-scan
      params:
      - name: image-digest
        value: $(tasks.build-container.results.IMAGE_DIGEST)
      - name: image-url
        value: $(tasks.build-container.results.IMAGE_URL)
      runAfter:
      - build-container
      taskRef:
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-clamav-scan:0.1@sha256:7370ea5a4205ae9062ea5393e673549fa8f8ea2e9985bd7a949435064cca93b7
        name: clamav-scan
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "true"
    - name: sbom-json-check
      params:
      - name: IMAGE_URL
        value: $(tasks.build-container.results.IMAGE_URL)
      - name: IMAGE_DIGEST
        value: $(tasks.build-container.results.IMAGE_DIGEST)
      runAfter:
      - build-container
      taskRef:
        bundle: quay.io/redhat-appstudio-tekton-catalog/task-sbom-json-check:0.1@sha256:dff6065790ed1c3b32878450a0bac33917b27a541d518fbf974cb063c1bd0ee1
        name: sbom-json-check
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    workspaces:
    - name: workspace
    - name: git-auth
      optional: true
  workspaces:
  - name: workspace
    volumeClaimTemplate:
      metadata:
        creationTimestamp: null
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status: {}
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
